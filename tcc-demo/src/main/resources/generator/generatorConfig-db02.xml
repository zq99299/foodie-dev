<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包-->
    <context id="MysqlTables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3308/xa-02?characterEncoding=utf-8"
                        userId="root"
                        password="root">
            <!-- 如果 table 里面的 catalog 没有配置的话，就取上面 connectionURL 中的数据库名
                 防止同一个数据库实例中有多个不同库中有相同名的表名，导致生成错误的字段或则重复的 mapper 内容
             -->
            <property name="nullCatalogMeansCurrent" value="true"></property>
        </jdbcConnection>
        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
            NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false"></property>
        </javaTypeResolver>

        <javaModelGenerator targetPackage="cn.mrcode.tcc.dao.db02.bean" targetProject="src/main/java">
            <!-- enableSubPackages:是否让 schema 作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <sqlMapGenerator targetPackage="mapper/db02" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <javaClientGenerator targetPackage="cn.mrcode.tcc.dao.db02.mapper"
                             targetProject="src/main/java"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!-- schema 防止同一个 mysql 实例中有相同名称的表名，导致拉错数据
             tableName 表名
             domainObjectName：实体类名称
         -->
<!--        <table schema="xa-02" tableName="xa_02" domainObjectName="XA02">-->
<!--        </table>-->
<!--        <table schema="xa-02" tableName="account_2" domainObjectName="Account2">-->
<!--        </table>-->
        <table schema="xa-02" tableName="t_order" domainObjectName="Order">
        </table>
    </context>
</generatorConfiguration>